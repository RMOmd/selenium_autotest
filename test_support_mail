import pytest
import allure
from selenium import webdriver
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait

def wait_of_element(xpath, driver):  # Это функция по поиску элементов с ожиданием появления элемента на странице
    element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located(
            (By.XPATH, xpath)
        )
    )
    return element


@allure.epic('Testing PolBox')
@allure.feature('Test support email recieving')
@allure.story('Тестирование получения письма от суппорта')
@allure.severity('critical')
def test_support_email():
    options = webdriver.ChromeOptions()
    prefs = {"profile.default_content_setting_values.notifications": 2}  # Отключение запроса уведомлений
    options.add_experimental_option("prefs", prefs)
    options.add_argument(
        f"--user-data-dir=C:/Users/RMO/AppData/Local/Google/Chrome/User Data")  # Подключение локальных куков, сюда прописать свой адрес до Юзердаты
    #options.headless = True
    driver = webdriver.Chrome(options=options,
                              executable_path=r'D:/Selenium/chromedriver.exe')  # Тут указываем адрес к chromedriver.exe
    driver.get("https://polbox.tv/en/customers/recovery/withemail/")

    # Поиск элементов и присваивание к переменным.

    print("\nОткрыта страница Succesful")
    input_email = wait_of_element(xpath='//*[@id="email"]', driver=driver)

    next_button = driver.find_element(By.CLASS_NAME, 'button ')
    #accept_button = wait_of_element(xpath='//*[@id="cookiesAgreement"]/span', driver=driver)

    # Действия с формами
    #accept_button.click()
    input_email.send_keys("polboxcustomer@gmail.com")
    next_button.click()
    # input_password = wait_of_element(xpath='//*[@id="codeOrPassword"]', driver=driver)
    # input_password.send_keys("Qwerty123456")
    # login_button2 = driver.find_element(By.CLASS_NAME, 'ui button')
    # login_button2.click()
    #
    #

    driver.get("https://mail.google.com/mail/u/0/?ogbl#inbox")
    we_in_cabinet = wait_of_element(xpath='//*[@id=":29"]/span/span', driver=driver)  # Проверка, что мы получили письмо
    if we_in_cabinet.text == "PolBox.TV":
        print("\nE-mail recieved")
    else:
        print("\nE-mail recieving FAILED!!!!!!!!!!!!!!!")
    time.sleep(1)
    
    # # Logout from account
    # logout_button = wait_of_element(xpath='//*[@id="profile"]//div/a[7]', driver=driver)
    # logout_button.click()
    #
    # we_in_main_page = wait_of_element(xpath='/html/body/div[1]/div/header/div[1]/div/div/div[4]/a', driver=driver)
    # if we_in_main_page.text == "SIGN IN":
    #     print("Logout Succesful")
    # else:
    #     print("Logout FAILED!!!!!!!!!!!!!!!")

    time.sleep(1)

if __name__ == '__daily_check2__':
    test_support_email()


@allure.epic('Testing PolBox')
@allure.feature('Test support SMS recieving')
@allure.story('Тестирование получения СМС от суппорта')
@allure.severity('critical')
def test_support_phone():
    options = webdriver.ChromeOptions()
    prefs = {"profile.default_content_setting_values.notifications": 2}  # Отключение запроса уведомлений
    options.add_experimental_option("prefs", prefs)
    options.add_argument(
        f"--user-data-dir=C:/Users/RMO/AppData/Local/Google/Chrome/User Data")  # Подключение локальных куков, сюда прописать свой адрес до Юзердаты
    #options.headless = True
    driver = webdriver.Chrome(options=options,
                              executable_path=r'D:/Selenium/chromedriver.exe')  # Тут указываем адрес к chromedriver.exe
    driver.get("https://polbox.tv/en/customers/recovery/withphone/")

    # Поиск элементов и присваивание к переменным.

    print("\nОткрыта страница Succesful")
    choose_country = wait_of_element(xpath='//*[@id="wrap_phone"]/div[1]', driver=driver)
    choose_country.click()
    time.sleep(1)
    choose_country2 = wait_of_element(xpath='//*[@id="wrap_phone"]//div[144]', driver=driver)
    choose_country2.click()
    time.sleep(1)
    input_phone = wait_of_element(xpath='//*[@id="phone"]', driver=driver)

    next_button = driver.find_element(By.CLASS_NAME, 'button ')
    #accept_button = wait_of_element(xpath='//*[@id="cookiesAgreement"]/span', driver=driver)

    # Действия с формами
    #accept_button.click()
    input_phone.send_keys("77728828")
    next_button.click()
    
    we_in_cabinet = wait_of_element(xpath='//*[@id="f7b6d3c7a67a1384c480f15d4141ce53"]/ul[1]/li[3]/h4', driver=driver)
    if we_in_cabinet.text == "Step 3. confirm your phone number":
        print("Login by E-mail Succesful")
    else:
        print("Login by E-mail failed")
    time.sleep(5)

if __name__ == '__daily_check2__':
    test_support_phone()
