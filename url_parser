def test_broken_img():
    options = webdriver.ChromeOptions()
    prefs = {"profile.default_content_setting_values.notifications": 2}
    options.add_experimental_option("prefs", prefs)
    options.add_argument(
        f"--user-data-dir=C:/Users/RMO/AppData/Local/Google/Chrome/User Data")  # Подключение локальных куков, сюда прописать свой адрес до Юзердаты
    #options.headless = True
    driver = webdriver.Chrome(options=options,
                              executable_path=r'D:/Selenium/chromedriver.exe')  # Тут указываем адрес к chromedriver.exe

    driver.get("http://play.polbox.tv/")

    subscription_field = wait_of_element(xpath='//*[@id="username"]', driver=driver)  # Находим поле логина
    subscription_field.send_keys('12437121')  # Вводим логин
    subscription_pass = wait_of_element(xpath='//*[@id="password"]', driver=driver)  # Находим поле пароля
    subscription_pass.send_keys('472790')  # Вводим пароль
    login_button = wait_of_element(xpath='//*[@id="root"]//form//div[3]/button', driver=driver)  # Находим кнопку войти
    login_button.click()  # Нажимаем

    urlList = [
        'http://play.polbox.tv/#/live/1762',
        'http://play.polbox.tv/#/live/1786',
        'http://play.polbox.tv/#/live/1585',
        'http://play.polbox.tv/#/live/1495'
    ]

    # with open('list.txt', 'r') as f:
    #     for i in f:
    #         urlList.append(i)

    # navigate to URL
    for i in urlList:
        print(i)
        driver.get(i)
        driver.implicitly_wait(2)

        print("\nОткрыта страница Successful")
        channel_name = wait_of_element(xpath='//*[@id="root"]/div/div/div/div[1]/div/div[1]/div/div/div',
                                       driver=driver)  # Находим и запоминаем имя канала (//img/following::div[15])[1]
        first_name = str(channel_name.text)
        print(first_name)

                #check_img(i, driver=driver)

        iBrokenImageCount = 0
        image_list = driver.find_elements(By.XPATH, '//*[@class="archiveCarBlock"]/div')
        print('Total number of images are ' + str(len(image_list)))

        total_images = 0

        for img in image_list:
            try:
                total_images = ++(len(image_list))
                response = requests.get(img.get_attribute('background'), stream=True)
                if (response.status_code != 200):
                    print(img.get_attribute('outerHTML') + " is broken.")
                    iBrokenImageCount = (iBrokenImageCount + 1)

            except requests.exceptions.MissingSchema:
                print("Encountered MissingSchema Exception")
            except requests.exceptions.InvalidSchema:
                print("Encountered InvalidSchema Exception")
            except:
                print("Encountered Some other Exception")
        print('The page has ' + str(iBrokenImageCount) + ' broken images')

    driver.quit()
